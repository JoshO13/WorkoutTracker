{"ast":null,"code":"var _jsxFileName = \"/Users/joshuaobrien/workspace/WorkoutTracker/frontend/src/context/WorkoutContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WorkoutsContext = /*#__PURE__*/createContext();\n\n//doesnt interact with DB, but simply keeps the local state\n//  sync'd to the DB, which allows auto refreshing without a new API req\nexport const workoutsReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_WORKOUTS':\n      return {\n        workouts: action.payload\n      };\n    case 'CREATE_WORKOUT':\n      return {\n        workouts: [action.payload, ...state.workouts]\n      };\n    default:\n      return state;\n  }\n};\n\n//wraps the children (<app />) \n//which wraps all components, allowing every comp to access the context\nexport const WorkoutsContextProvider = ({\n  children\n}) => {\n  _s();\n  //returns a state value, intiializes initial value for the state,\n  const [state, dispatch] = useReducer(workoutsReducer, {\n    workouts: null\n  });\n  return /*#__PURE__*/_jsxDEV(WorkoutsContext.Provider, {\n    value: {\n      ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(WorkoutsContextProvider, \"iqcdMTT1PIprchi7J3bhqiXoAX0=\");\n_c = WorkoutsContextProvider;\nvar _c;\n$RefreshReg$(_c, \"WorkoutsContextProvider\");","map":{"version":3,"names":["createContext","useReducer","jsxDEV","_jsxDEV","WorkoutsContext","workoutsReducer","state","action","type","workouts","payload","WorkoutsContextProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joshuaobrien/workspace/WorkoutTracker/frontend/src/context/WorkoutContext.js"],"sourcesContent":["import { createContext, useReducer } from 'react'\n\nexport const WorkoutsContext = createContext()\n\n\n//doesnt interact with DB, but simply keeps the local state\n//  sync'd to the DB, which allows auto refreshing without a new API req\nexport const workoutsReducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_WORKOUTS': \n            return {\n                workouts: action.payload\n            }\n        case 'CREATE_WORKOUT':\n            return {\n                workouts:  [action.payload, ...state.workouts]\n            }\n        default: \n            return state\n    }\n}\n\n//wraps the children (<app />) \n    //which wraps all components, allowing every comp to access the context\nexport const WorkoutsContextProvider = ({ children }) => {\n    //returns a state value, intiializes initial value for the state,\n    const [state, dispatch] = useReducer(workoutsReducer, {\n        workouts: null\n    })\n\n\n\n    return (\n        <WorkoutsContext.Provider value={{...state, dispatch}}>\n            { children }\n        </WorkoutsContext.Provider>\n    )\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,MAAMC,eAAe,gBAAGJ,aAAa,CAAC,CAAC;;AAG9C;AACA;AACA,OAAO,MAAMK,eAAe,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC9C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,cAAc;MACf,OAAO;QACHC,QAAQ,EAAEF,MAAM,CAACG;MACrB,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAO;QACHD,QAAQ,EAAG,CAACF,MAAM,CAACG,OAAO,EAAE,GAAGJ,KAAK,CAACG,QAAQ;MACjD,CAAC;IACL;MACI,OAAOH,KAAK;EACpB;AACJ,CAAC;;AAED;AACI;AACJ,OAAO,MAAMK,uBAAuB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrD;EACA,MAAM,CAACP,KAAK,EAAEQ,QAAQ,CAAC,GAAGb,UAAU,CAACI,eAAe,EAAE;IAClDI,QAAQ,EAAE;EACd,CAAC,CAAC;EAIF,oBACIN,OAAA,CAACC,eAAe,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAC,GAAGV,KAAK;MAAEQ;IAAQ,CAAE;IAAAF,QAAA,EAChDA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAEnC,CAAC;AAAAP,EAAA,CAbYF,uBAAuB;AAAAU,EAAA,GAAvBV,uBAAuB;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}